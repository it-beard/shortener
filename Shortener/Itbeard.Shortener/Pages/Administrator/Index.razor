@page "/admin"
@attribute [Authorize]

@using Itbeard.Models
@using Itbeard.Services.Interfaces

@inject NavigationManager NavigationManager
@inject IUrlService urlService
@inject IConfiguration configuration
@inject IJSRuntime jsRuntime
@inject IStringLocalizer<Localizations> Loc

<div class="custom-container">
    <NavMenu />
    <h4 class="card-header d-flex justify-content-between align-items-center">
        <span>
            @Loc[Localizations.Index_Header]
        </span>
        <a
            title="@Loc[Localizations.Index_ShortenLink]"
            alt="@Loc[Localizations.Index_ShortenLink]"
            class="btn btn-success" href="admin/reduce">
            @Loc[Localizations.Index_ShortenLink]
        </a>
    </h4>
    <table class="table">
        <thead>
        <tr>
            <th class="date-header text-center">
                @Loc[Localizations.Index_TableHead_Created]
            </th>

            <th class="name-header">
                @Loc[Localizations.Index_TableHead_ShortName]
            </th>

            <th class="statistics-header">
                @Loc[Localizations.Index_TableHead_Clicks]
            </th>

            <th>
                @Loc[Localizations.Index_TableHead_TargetUrl]
            </th>

            <th class="actions-header text-center"></th>
        </tr>
        </thead>
        <tbody>
        @foreach (var url in urls)
        {
            <tr>
                <td class="text-center">
                    <span class="data-label">
                        @url.CreatedAt.ToString("dd/MM/yy")
                    </span>
                </td>

                <td>
                    <a href="@($"{configuration["AppUrl"]}/{url.ShortName}")" target="_blank">@url.ShortName</a>
                </td>

                <td>
                    @url.VisitCount
                </td>

                <td>
                    <div class="target-link">
                        <a href="@url.TargetUrl" target="_blank">@url.TargetUrl</a>
                    </div>
                </td>

                <td class="actions-row text-center">
                    <div class="actions-buttons">
                        @{
                            <button
                                title="@Loc[Localizations.Index_TableButtons_Edit]"
                                alt="@Loc[Localizations.Index_TableButtons_Edit]"
                                class="btn btn-primary btn-sm"
                                @onclick="() => OnEdit(url.Id)">
                                <i class="bi bi-pencil-fill"></i>
                            </button>
                        }
                        @{
                            <button
                                title="@Loc[Localizations.Index_TableButtons_Delete]"
                                alt="@Loc[Localizations.Index_TableButtons_Delete]"
                                class="btn btn-danger btn-sm"
                                @onclick="() => OnDelete(url)">
                                <i class="bi bi-trash-fill"></i>
                            </button>
                        }
                    </div>
                </td>
            </tr>
        }
        </tbody>
    </table>
</div>

@code {
    private List<UrlModel> urls = new();

    protected override async Task OnInitializedAsync()
    {
        urls = await urlService.GetAllAsync();
    }

    private void OnEdit(Guid id)
    {
        NavigationManager.NavigateTo($"admin/edit/{id}");
    }

    private async Task OnDelete(UrlModel url)
    {
        var confirmed = await jsRuntime
            .InvokeAsync<bool>("confirm", $"{Loc[Localizations.ConfirmJS_DeleteLink]} \"{url.ShortName}\"?");
        if (confirmed)
        {
            await urlService.DeleteAsync(url.Id);
            urls.Remove(url);
        }
    }
}