@page "/admin/reduce"
@attribute [Authorize]

@using Itbeard.Services.Interfaces
@using Itbeard.Core
@using Itbeard.Services.Exceptions
@using TextCopy

@inject IUrlService urlService
@inject IConfiguration configuration
@inject IStringLocalizer<Localizations> Loc

<div class="custom-container">
    <NavMenu />
    <h2>
        @Loc[Localizations.ReduceLink_Header]
    </h2>

    <div class="form-group">
        <label for="link">
            @Loc[Localizations.ReduceLink_TargetUrl]
        </label>
        <input id="link"
               class="form-control"
               type="text"
               required="required"
               @bind="link"
               title="@Loc[Localizations.ReduceLink_TargetUrl]"
               placeholder="@Loc[Localizations.ReduceLink_TargetUrlPlaceholder]">
    </div>

    <div class="form-group">
        <label for="name">
            @Loc[Localizations.ReduceLink_ShortName]
        </label>
        <input id="name"
               class="form-control"
               type="text"
               @bind="name"
               title="@Loc[Localizations.ReduceLink_ShortName]"
               placeholder="@Loc[Localizations.ReduceLink_ShortNamePlaceholder]">
        <small id="nateNote" class="form-text text-muted">
            @Loc[Localizations.ReduceLink_ShortNameNote]
        </small>
    </div>

    <div class="form-group">
        <button class="btn btn-success w-100"
                @onclick="OnCreateButtonClick"
                title="@Loc[Localizations.ReduceLink_CreateButton]"
                alt="@Loc[Localizations.ReduceLink_CreateButton]">
            @Loc[Localizations.ReduceLink_CreateButton]
        </button>
    </div>

    @if (!string.IsNullOrEmpty(reducedUrl))
    {
        <div class="form-group reduce">
            <label for="finalLink">
                @Loc[Localizations.ReduceLink_ResultLink]
            </label>
            <input id="finalLink"
                   class="form-control"
                   type="text"
                   @bind="reducedUrl"
                   title="@Loc[Localizations.ReduceLink_ResultLink]">
        </div>

        <div class="form-group copy">
            <button class="btn btn-primary  w-100"
                    @onclick="OnCopyToClipboard"
                    title="@Loc[Localizations.ReduceLink_Copy]">
                @Loc[Localizations.ReduceLink_Copy]
            </button>
        </div>
    }

    @if (!string.IsNullOrEmpty(error))
    {
        <div class="errors">
            @error
        </div>
    }
</div>

@code {
    private string link = string.Empty;
    private string name = string.Empty;
    private string reducedUrl = string.Empty;
    private string error = string.Empty;

    private async Task OnCreateButtonClick()
    {
        if (!string.IsNullOrEmpty(name) && name.Length > Constants.MaxShortUrlNameLength)
        {
            error = Loc[Localizations.ReduceLink_Exception_LongShortName];
            return;
        }

        error = string.Empty;
        reducedUrl = string.Empty;
        try
        {
            var urlModel = await urlService.ReduceAsync(link, name);
            if (urlModel != null)
            {
                reducedUrl = $"{configuration["AppUrl"]}/{urlModel.ShortName}";
            }
        }
        catch (TargetUrlEmptyException)
        {
            error = Loc[Localizations.ReduceLink_Exception_TargetUrlEmpty];
        }
        catch (DuplicateShortUrlNameException)
        {
            error = Loc[Localizations.ReduceLink_Exception_DuplicateShortUrl];
        }
    }

    private void OnCopyToClipboard()
    {
        var clipboard = new Clipboard();
        clipboard.SetText(reducedUrl);
    }
}