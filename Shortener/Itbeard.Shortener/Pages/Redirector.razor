@page "/{shortName}"

@using Itbeard.Services.Interfaces
@using Itbeard.Models
@using Microsoft.AspNetCore.Http
@using DeviceDetectorNET
@using Microsoft.AspNetCore.Hosting
@inject IUrlService UrlService
@inject IStatisticService StatisticService
@inject IWebHostEnvironment WebHostEnvironment
@inject NavigationManager NavigationManager
@inject IHttpContextAccessor HttpContextAccessor

@if (urlEntity?.TargetUrl != null)
{
    <text>Сейчас тебя перекинет сюда: @urlEntity.TargetUrl</text>
}
else
{
    <text>Ссылка не найдена.</text>
}

@code {
    [Parameter]
    // ReSharper disable once MemberCanBePrivate.Global
    public string ShortName { get; set; }
    private UrlModel urlEntity { get; set; }

    protected override async Task OnInitializedAsync()
    {
        urlEntity = await UrlService.GetAsync(ShortName);
        if (urlEntity?.TargetUrl != null)
        {
            try
            {
                await SaveUserInfo(urlEntity.Id);
            }
            catch (Exception)
            {
                //todo: need to be logged
            }

            NavigationManager.NavigateTo(urlEntity.TargetUrl);
        }
    }

    private async Task SaveUserInfo(Guid urlId)
    {
        var userInfo = new StatisticModel
        {
            Id = Guid.NewGuid(),
            UrlId = urlId,
            CreatedAt = DateTime.UtcNow,
            IpAddress = HttpContextAccessor.HttpContext.Connection?.RemoteIpAddress.ToString(),
            ReferrerUrl = HttpContextAccessor.HttpContext.Request.GetTypedHeaders().Referer?.ToString()
        };

        var userAgent = HttpContextAccessor.HttpContext.Request.Headers["User-Agent"];

        userInfo.UserAgent = userAgent;
        var deviceDetector = new DeviceDetector(userAgent);
        deviceDetector.Parse();
        if(!deviceDetector.IsBot()) {
            userInfo.Browser = deviceDetector.GetClient().Match.Name;
            userInfo.OperationSystem = deviceDetector.GetOs().Match.Name;
            userInfo.Device = deviceDetector.GetDeviceName();
            userInfo.DeviceBrand  = deviceDetector.GetBrandName();
            userInfo.DeviceModel  = deviceDetector.GetModel();
        }

        await StatisticService.SaveAsync(userInfo, WebHostEnvironment.ContentRootPath);
    }
}